{"ast":null,"code":"import{configureStore,combineReducers}from\"@reduxjs/toolkit\";import authReducer from\"./authSlice\";import userReducer from\"./userSlice\";import{persistStore,persistReducer,FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER}from\"redux-persist\";import storage from\"redux-persist/lib/storage\";var persistConfig={key:\"root\",version:1,storage:storage};//const rootReducer = combineReducers({ auth: authReducer});\nvar rootReducer=combineReducers({auth:authReducer,user:userReducer});var persistedReducer=persistReducer(persistConfig,rootReducer);export var store=configureStore({reducer:persistedReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({serializableCheck:{ignoredActions:[FLUSH,REHYDRATE,PAUSE,PERSIST,PURGE,REGISTER]}});}});export var persistor=persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","authReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","auth","user","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["D:/TLCN/SourceCode/BloodnHeart/client/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./authSlice\";\r\nimport userReducer from \"./userSlice\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};//const rootReducer = combineReducers({ auth: authReducer});\r\nconst rootReducer = combineReducers({ auth: authReducer, user: userReducer });\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n})\r\n\r\nexport let persistor = persistStore(store);"],"mappings":"AAAA,OAASA,cAAc,CAAEC,eAAe,KAAQ,kBAAkB,CAClE,MAAO,CAAAC,WAAW,KAAM,aAAa,CACrC,MAAO,CAAAC,WAAW,KAAM,aAAa,CACrC,OACEC,YAAY,CACZC,cAAc,CACdC,KAAK,CACLC,SAAS,CACTC,KAAK,CACLC,OAAO,CACPC,KAAK,CACLC,QAAQ,KACH,eAAe,CACtB,MAAO,CAAAC,OAAO,KAAM,2BAA2B,CAE/C,GAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,MAAM,CACXC,OAAO,CAAE,CAAC,CACVH,OAAO,CAAPA,OACF,CAAC,CAAC;AACF,GAAM,CAAAI,WAAW,CAAGf,eAAe,CAAC,CAAEgB,IAAI,CAAEf,WAAW,CAAEgB,IAAI,CAAEf,WAAY,CAAC,CAAC,CAC7E,GAAM,CAAAgB,gBAAgB,CAAGd,cAAc,CAACQ,aAAa,CAAEG,WAAW,CAAC,CAEnE,MAAO,IAAM,CAAAI,KAAK,CAAGpB,cAAc,CAAC,CAClCqB,OAAO,CAAEF,gBAAgB,CACzBG,UAAU,CAAE,SAAAA,WAACC,oBAAoB,QAC/B,CAAAA,oBAAoB,CAAC,CACnBC,iBAAiB,CAAE,CACjBC,cAAc,CAAE,CAACnB,KAAK,CAAEC,SAAS,CAAEC,KAAK,CAAEC,OAAO,CAAEC,KAAK,CAAEC,QAAQ,CACpE,CACF,CAAC,CAAC,EACN,CAAC,CAAC,CAEF,MAAO,IAAI,CAAAe,SAAS,CAAGtB,YAAY,CAACgB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}