{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = false;\n    },\n    loginFailed: (state, action) => {\n      state.login.isFetching = false;\n      state.login.error = action.payload;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: state => {\n      state.register.isFetching = false;\n      state.register.error = false;\n      state.register.success = true;\n    },\n    registerFailed: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = false;\n    },\n    logOutSuccess: state => {\n      state.login.isFetching = false;\n      state.login.currentUser = null;\n      state.login.error = false;\n    },\n    logOutFailed: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    logOutStart: state => {\n      state.login.isFetching = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFailed,\n  loginSuccess,\n  registerStart,\n  registerSuccess,\n  registerFailed,\n  logOutStart,\n  logOutSuccess,\n  logOutFailed\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","success","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","registerStart","registerSuccess","registerFailed","logOutSuccess","logOutFailed","logOutStart","actions","reducer"],"sources":["D:/TLCN/SourceCode/BloodnHeart/client/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState: {\r\n        login: {\r\n            currentUser: null,\r\n            isFetching: false,\r\n            error: false\r\n        },\r\n        register: {\r\n            isFetching: false,\r\n            error: false,\r\n            success: false\r\n        },\r\n    },\r\n    reducers: {\r\n        loginStart: (state) => {\r\n            state.login.isFetching = true;\r\n        },\r\n        loginSuccess: (state, action) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = action.payload;\r\n            state.login.error = false;\r\n        },\r\n        loginFailed: (state,action) => {\r\n            state.login.isFetching = false;\r\n            state.login.error = action.payload;\r\n        },\r\n        registerStart: (state) => {\r\n            state.register.isFetching = true;\r\n        },\r\n        registerSuccess: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = false;\r\n            state.register.success = true;\r\n        },\r\n        registerFailed: (state) => {\r\n            state.register.isFetching = false;\r\n            state.register.error = true;\r\n            state.register.success = false;\r\n        },\r\n        logOutSuccess: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.currentUser = null;\r\n            state.login.error = false;\r\n        },\r\n        logOutFailed: (state) => {\r\n            state.login.isFetching = false;\r\n            state.login.error = true;\r\n        },\r\n        logOutStart: (state) => {\r\n            state.login.isFetching = true;\r\n        },\r\n\r\n    }\r\n});\r\n\r\nexport const {\r\n    loginStart,\r\n    loginFailed,\r\n    loginSuccess,\r\n    registerStart,\r\n    registerSuccess,\r\n    registerFailed,\r\n    logOutStart,\r\n    logOutSuccess,\r\n    logOutFailed\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE;MACHC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE;IACX,CAAC;IACDC,QAAQ,EAAE;MACNF,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,KAAK;MACZE,OAAO,EAAE;IACb;EACJ,CAAC;EACDC,QAAQ,EAAE;IACNC,UAAU,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,IAAI;IACjC,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACC,WAAW,GAAGS,MAAM,CAACC,OAAO;MACxCH,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,KAAK;IAC7B,CAAC;IACDS,WAAW,EAAEA,CAACJ,KAAK,EAACE,MAAM,KAAK;MAC3BF,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACG,KAAK,GAAGO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDE,aAAa,EAAGL,KAAK,IAAK;MACtBA,KAAK,CAACJ,QAAQ,CAACF,UAAU,GAAG,IAAI;IACpC,CAAC;IACDY,eAAe,EAAGN,KAAK,IAAK;MACxBA,KAAK,CAACJ,QAAQ,CAACF,UAAU,GAAG,KAAK;MACjCM,KAAK,CAACJ,QAAQ,CAACD,KAAK,GAAG,KAAK;MAC5BK,KAAK,CAACJ,QAAQ,CAACC,OAAO,GAAG,IAAI;IACjC,CAAC;IACDU,cAAc,EAAGP,KAAK,IAAK;MACvBA,KAAK,CAACJ,QAAQ,CAACF,UAAU,GAAG,KAAK;MACjCM,KAAK,CAACJ,QAAQ,CAACD,KAAK,GAAG,IAAI;MAC3BK,KAAK,CAACJ,QAAQ,CAACC,OAAO,GAAG,KAAK;IAClC,CAAC;IACDW,aAAa,EAAGR,KAAK,IAAK;MACtBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACC,WAAW,GAAG,IAAI;MAC9BO,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,KAAK;IAC7B,CAAC;IACDc,YAAY,EAAGT,KAAK,IAAK;MACrBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,IAAI;IAC5B,CAAC;IACDe,WAAW,EAAGV,KAAK,IAAK;MACpBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,IAAI;IACjC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTK,UAAU;EACVK,WAAW;EACXH,YAAY;EACZI,aAAa;EACbC,eAAe;EACfC,cAAc;EACdG,WAAW;EACXF,aAAa;EACbC;AACJ,CAAC,GAAGpB,SAAS,CAACsB,OAAO;AAErB,eAAetB,SAAS,CAACuB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}